
// Microportal of selected pages (based on "Menu of subpages to these pages (with abstract)")
tt_content.menu.20 {

	// microportal of selected pages
	tx_microportals_sel_pg = HMENU
	tx_microportals_sel_pg {
		special = list
		special.value.field = pages
		stdWrap.outerWrap >
		wrap = <div class="row tx-microportals-microportal">|</div>
		1 = TMENU
		1.itemArrayProcFunc = Int\Microportals\Utility\MenuUtility->removeNavTitleItemArrayProcFunc
		1.IProcFunc = Int\Microportals\Utility\MenuUtility->replaceATagMarkersInMenuPartsIProcFunc
		1.NO {
			wrapItemAndSub = <div class="tx-microportals-microportal-column">|</div>
			stdWrap.outerWrap.cObject = COA
			stdWrap.outerWrap.cObject {

				stdWrap.wrap (
					<div class="tx-microportals-microportal-item">
						|
					</div>
				)

				10 = COA
				10 {
					if.value = {$styles.content.microportals.default.imagePosition}
					if.equals = before

					10 = FILES
					10 {
						references {
							fieldName = tx_microportals_portalimage
						}

						renderObj = IMAGE
						renderObj {

							// We need to use a hack here to get the correct template for the last element
							// because optionSlit is already executed for the MENU content object and will
							// give us invalid values for the sourceCollection.
							layoutKey = srcset
							layout.srcset.element < tt_content.image.20.1.layout.srcset.element
							layout.srcset.source.cObject = USER
							layout.srcset.source.cObject.userFunc = Int\Microportals\Utility\TypoScriptUtility->fetchAndExplodeTypoScriptFromPath
							layout.srcset.source.cObject.path = tt_content.image.20.1.layout.srcset.source
							layout.srcset.source.cObject.delimiter = optionSplit
							layout.srcset.source.cObject.resetAfter = 2

							sourceCollection {
								small {
									width = 400
									srcsetCandidate = 400w
									dataKey = small
								}
								medium {
									width = 600
									srcsetCandidate = 600w
									dataKey = medium
								}
							}

							file {
								width = 400
								// We use intval here to make sure the same image as in the sourceCollection is used.
								width.intval = 1
								import.data = file:current:uid
								treatIdAsReference = 1
							}

							altText.data = file:current:alternative
							altText.ifEmpty.field = title
							titleText.data = file:current:title
						}

						stdWrap.wrap = <div class="tx-microportals-item-image">|</div>
						stdWrap.required = 1
					}

					stdWrap.ifEmpty = <div class="tx-microportals-item-no-image"></div>
				}

				50 = TEXT
				50.value = <div class="tx-microportals-item-text">|</div>

				80 < .10
				80.if.equals = after

			}
		}
	}

	// Microportal of subpages of selected pages
	tx_microportals_sel_subpg < .tx_microportals_sel_pg
	tx_microportals_sel_subpg.special = directory
}
